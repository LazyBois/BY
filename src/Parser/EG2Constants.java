/* Generated By:JJTree&JavaCC: Do not edit this line. EG2Constants.java */
package Parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface EG2Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int Main = 7;
  /** RegularExpression Id. */
  int IF = 8;
  /** RegularExpression Id. */
  int ELSE = 9;
  /** RegularExpression Id. */
  int FOR = 10;
  /** RegularExpression Id. */
  int DO = 11;
  /** RegularExpression Id. */
  int WHILE = 12;
  /** RegularExpression Id. */
  int SWITCH = 13;
  /** RegularExpression Id. */
  int CASE = 14;
  /** RegularExpression Id. */
  int DEFAUL = 15;
  /** RegularExpression Id. */
  int BREAK = 16;
  /** RegularExpression Id. */
  int RETURN = 17;
  /** RegularExpression Id. */
  int CONTINUE = 18;
  /** RegularExpression Id. */
  int add = 19;
  /** RegularExpression Id. */
  int sub = 20;
  /** RegularExpression Id. */
  int mul = 21;
  /** RegularExpression Id. */
  int div = 22;
  /** RegularExpression Id. */
  int sig = 23;
  /** RegularExpression Id. */
  int doubleadd = 24;
  /** RegularExpression Id. */
  int doublesub = 25;
  /** RegularExpression Id. */
  int exclamation = 26;
  /** RegularExpression Id. */
  int and = 27;
  /** RegularExpression Id. */
  int or = 28;
  /** RegularExpression Id. */
  int andand = 29;
  /** RegularExpression Id. */
  int oror = 30;
  /** RegularExpression Id. */
  int assign = 31;
  /** RegularExpression Id. */
  int equal = 32;
  /** RegularExpression Id. */
  int noEqual = 33;
  /** RegularExpression Id. */
  int less = 34;
  /** RegularExpression Id. */
  int over = 35;
  /** RegularExpression Id. */
  int overEqual = 36;
  /** RegularExpression Id. */
  int lessEqual = 37;
  /** RegularExpression Id. */
  int quotation = 38;
  /** RegularExpression Id. */
  int LC = 39;
  /** RegularExpression Id. */
  int RC = 40;
  /** RegularExpression Id. */
  int LT = 41;
  /** RegularExpression Id. */
  int RT = 42;
  /** RegularExpression Id. */
  int Lbrace = 43;
  /** RegularExpression Id. */
  int Rbrace = 44;
  /** RegularExpression Id. */
  int VOID = 45;
  /** RegularExpression Id. */
  int Int = 46;
  /** RegularExpression Id. */
  int Double = 47;
  /** RegularExpression Id. */
  int Float = 48;
  /** RegularExpression Id. */
  int SHORT = 49;
  /** RegularExpression Id. */
  int LONG = 50;
  /** RegularExpression Id. */
  int Char = 51;
  /** RegularExpression Id. */
  int Bool = 52;
  /** RegularExpression Id. */
  int comma = 53;
  /** RegularExpression Id. */
  int semicolon = 54;
  /** RegularExpression Id. */
  int colon = 55;
  /** RegularExpression Id. */
  int CHARCONSTANT = 56;
  /** RegularExpression Id. */
  int STRINGCONSTANT = 57;
  /** RegularExpression Id. */
  int FLOATCONSTANT = 58;
  /** RegularExpression Id. */
  int DOUBLECONSTANT = 59;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 60;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 61;
  /** RegularExpression Id. */
  int HEX_LITERAL = 62;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 63;
  /** RegularExpression Id. */
  int IDENTIFIER = 64;
  /** RegularExpression Id. */
  int LETTER = 65;
  /** RegularExpression Id. */
  int DIGIT = 66;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"for\"",
    "\"do\"",
    "\"while\"",
    "\"switch\"",
    "\"case\"",
    "\"default\"",
    "\"break\"",
    "\"return\"",
    "\"continue\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\"!\"",
    "\"&\"",
    "\"|\"",
    "\"&&\"",
    "\"||\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\">=\"",
    "\"<=\"",
    "\"\\\'\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"void\"",
    "\"int\"",
    "\"double\"",
    "\"float\"",
    "\"short\"",
    "\"long\"",
    "\"char\"",
    "\"bool\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "<CHARCONSTANT>",
    "<STRINGCONSTANT>",
    "<FLOATCONSTANT>",
    "<DOUBLECONSTANT>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
  };

}
